setwd("C:/Users/Isabel Giannecchini/Desktop/SSD/rCrashCourse/Segunda Aula")
setwd("C:/Users/Isabel Giannecchini/Desktop/SSD/rCrashCourse/Terceira Aula")
install.packages("dplyr")
library(dplyr)
install.packages("car")
library(car)
dados <- read.excel("Banco de Dados __SSD 2 2023 (1).xlsx")
dados <- read_excel("Banco de Dados __SSD 2 2023 (1).xlsx")
install.packages("dplyr")
library(dplyr)
install.packages("car")
library(car)
install.packages("readxl")
library(readxl)
dados <- read_excel("Banco de Dados __SSD 2 2023 (1).xlsx")
install.packages("dplyr")
install.packages("car")
install.packages("readxl")
library(readxl)
dados <- read_excel("Banco de Dados __SSD 2 2023 (1).xlsx")
install.packages("readxl")
View(dados)
dados$Genero_num <- factor(dados$Genero, labels = c(seq.int(0, length(unique(dados$Genero))-1, 1)), levels = c(unique(dados$Genero)))
View(dados)
dados$Instrucao_num <- factor(dados$Grau_de_Instruçao, labels = c(seq.int(0, length(unique(dados$Grau_de_Instruçao))-1, 1)), levels = c(unique(dados$Grau_de_Instruçao)))
shapiro.test(dados)
shapiro.test(dados$Instrucao_num)
class(dados$Instrucao_num) = 'Numeric'
shapiro.test(dados$Instrucao_num)
shapiro.test(dados$Altura)
shapiro.test(dados$Salario)
boxplot(dados$Altura)
summary(dados$Altura)
t.test(dados$Altura, ylab="Altura (cm)")
boxplot(dados$Altura, ylab="Altura (cm)")
table(dados$Genero)
table(dados$Grau_de_Instruçao)
table(dados$Grau_de_Instruçao, dados$Genero)
prop.table(dados$Grau_de_Instruçao, dados$Genero)
prop.table(table(dados$Grau_de_Instruçao, dados$Genero))
table(dados$Grau_de_Instruçao, dados$Salario)
table(dados$Grau_de_Instruçao, dados$N_Filhos)
prop.table(table(dados$Grau_de_Instruçao, dados$N_Filhos))
#Método de Sturgis
#Serve para categorizar dados contínuos
range(dados$Salario)
nclass.Sturges(dados$Salario)
range(dados$Salario)
table(cut(dados$Salario, seq(0,6, l=7))) #classes+1 para considerar as extremidades
dados$Salario_disc<- factor(dados$Salario, labels = cut(dados$Salario, seq(0,6, l=7)), levels c= (unique(dados$Salario))) #classes+1 para considerar as extremidades
table(cut(dados$Salario, seq(0,6, l=7)))
dados$Salario_disc<- factor(dados$Salario, labels = cut(dados$Salario, seq(0,6, l=7)), levels = c(unique(dados$Salario))) #classes+1 para considerar as extremidades
sturges_cut <- table(cut(dados$Salario, seq(0,6, l=7)))
sturges_cut.type()
class(sturges_cut)
sturges_cut <- cut(dados$Salario, seq(0,6, l=7))
sturges_cut$levels
sturges_cut.levels
sturges_cut
sturge_levels <- levels(sturges_cut)
sturge_levels[0]
sturge_levels[0][1]
sturge_levels <- c(levels(sturges_cut))
sturge_levels
sturge_levels[0]
sturge_levels[1]
sturge_levels[2]
sturge_levels[1][1]
sturge_levels[1][2]
sturge_levels[1][0]
sturge_levels[1][1]
sturge_levels <- table(levels(sturges_cut))
sturge_levels
columns(sturge_levels)
sturge_levels <-(levels(sturges_cut))
cbind(lower = as.numeric( sub("\\((.+),.*", "\\1", sturge_levels) ),
upper = as.numeric( sub("[^,]*,([^]]*)\\]", "\\1", sturge_levels) ))
lower(sturge_levels)
sturge_levels.lower
sturges_levels_divided <- table(cbind(lower = as.numeric( sub("\\((.+),.*", "\\1", sturge_levels) ),
upper = as.numeric( sub("[^,]*,([^]]*)\\]", "\\1", sturge_levels) )))
sturges_levels_divided
sturges_levels_divided <- c(cbind(lower = as.numeric( sub("\\((.+),.*", "\\1", sturge_levels) ),
upper = as.numeric( sub("[^,]*,([^]]*)\\]", "\\1", sturge_levels) )))
sturges_levels_divided
sturges_upper <- cbind(upper = as.numeric( sub("[^,]*,([^]]*)\\]", "\\1", sturge_levels) ))
sturges_upper
sturges_upper[0]
sturges_upper[1]
sturges_upper[2]
install.packages("psych")
library(psych)
describe(dados$Salario)
describe.by(dados$Salario)
describeBy(dados$Salario)
describeBy(dados$Salario, group = dados$Genero)
sturges_upper[3]
for salario in unique(dados$Salario){
for (salario in unique(dados$Salario)){
if (salario < sturges_upper[1]){
dados$Salario_disc <- factor(salario, labels = (sturges_upper[1]), levels = salario)
next
}
else if (salario < sturges_upper[2]){
dados$Salario_disc <- factor(salario, labels = (sturges_upper[2]), levels = salario)
next
}
else if (salario < sturges_upper[3]){
dados$Salario_disc <- factor(salario, labels = (sturges_upper[3]), levels = salario)
next
}
else if (salario < sturges_upper[4]){
dados$Salario_disc <- factor(salario, labels = (sturges_upper[4]), levels = salario)
next
}
else if (salario < sturges_upper[5]){
dados$Salario_disc <- factor(salario, labels = (sturges_upper[5]), levels = salario)
next
}
else if (salario < sturges_upper[6]){
dados$Salario_disc <- factor(salario, labels = (sturges_upper[6]), levels = salario)
next
}
}
for (salario in unique(dados$Salario)){
if (salario < sturges_upper[1]){
dados$Salario_disc <- append(dados$Salario_disc, factor(dados$Salario, labels = (sturges_upper[1]), levels = salario))
next
}
else if (salario < sturges_upper[2]){
dados$Salario_disc <- factor(dados$Salario, labels = (sturges_upper[2]), levels = salario)
next
}
else if (salario < sturges_upper[3]){
dados$Salario_disc <- factor(dados$Salario, labels = (sturges_upper[3]), levels = salario)
next
}
else if (salario < sturges_upper[4]){
dados$Salario_disc <- factor(dados$Salario, labels = (sturges_upper[4]), levels = salario)
next
}
else if (salario < sturges_upper[5]){
dados$Salario_disc <- factor(dados$Salario, labels = (sturges_upper[5]), levels = salario)
next
}
else if (salario < sturges_upper[6]){
dados$Salario_disc <- factor(dados$Salario, labels = (sturges_upper[6]), levels = salario)
next
}
}
for (salario in unique(dados$Salario)){
if (salario < sturges_upper[1]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[1])
next
}
else if (salario < sturges_upper[2]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[2])
next
}
else if (salario < sturges_upper[3]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[3])
next
}
else if (salario < sturges_upper[4]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[4])
next
}
else if (salario < sturges_upper[5]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[5])
next
}
else if (salario < sturges_upper[6]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[6])
next
}
}
for (salario in unique(dados$Salario)){
if (salario <= sturges_upper[1]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[1])
next
}
else if (salario <= sturges_upper[2]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[2])
next
}
else if (salario <= sturges_upper[3]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[3])
next
}
else if (salario <= sturges_upper[4]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[4])
next
}
else if (salario <= sturges_upper[5]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[5])
next
}
else if (salario <= sturges_upper[6]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[6])
next
}
}
drop(dados$Salario_disc)
for (salario in unique(dados$Salario)){
if (salario <= sturges_upper[1]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[1])
next
}
else if (salario <= sturges_upper[2]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[2])
next
}
else if (salario <= sturges_upper[3]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[3])
next
}
else if (salario <= sturges_upper[4]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[4])
next
}
else if (salario <= sturges_upper[5]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[5])
next
}
else if (salario <= sturges_upper[6]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[6])
next
}
}
drop(dados$Salario_disc)
View(dados)
dados <- drop(dados$Salario_disc)
dados <- read_excel("Banco de Dados __SSD 2 2023 (1).xlsx")
dados$Genero_num <- factor(dados$Genero, labels = c(seq.int(0, length(unique(dados$Genero))-1, 1)), levels = c(unique(dados$Genero)))
dados$Instrucao_num <- factor(dados$Grau_de_Instruçao, labels = c(seq.int(0, length(unique(dados$Grau_de_Instruçao))-1, 1)), levels = c(unique(dados$Grau_de_Instruçao)))
class(dados$Instrucao_num) = 'Numeric'
range(dados$Salario) #os salários estão variando entre 1 e 5.8
nclass.Sturges(dados$Salario) #quantdiade de classes nas quais se podem dividir os dados
sturges_cut <- table(cut(dados$Salario, seq(0,6, l=7)))
dados$Salario_disc<- factor(dados$Salario, labels = cut(dados$Salario, seq(0,6, l=7)), levels = c(unique(dados$Salario))) #classes+1 para considerar as extremidades
sturges_cut <- cut(dados$Salario, seq(0,6, l=7))
sturges_upper <- cbind(upper = as.numeric( sub("[^,]*,([^]]*)\\]", "\\1", sturge_levels) ))
for (salario in unique(dados$Salario)){
if (salario <= sturges_upper[1]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[1])
next
}
else if (salario <= sturges_upper[2]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[2])
next
}
else if (salario <= sturges_upper[3]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[3])
next
}
else if (salario <= sturges_upper[4]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[4])
next
}
else if (salario <= sturges_upper[5]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[5])
next
}
else if (salario <= sturges_upper[6]){
dados$Salario_disc <- append(dados$Salario_disc, sturges_upper[6])
next
}
}
sturges_upper[1]
View(dados)
for (salario in unique(dados$Salario)){
if (salario <= sturges_upper[1]){
list <- append(list, sturges_upper[1])
next
}
else if (salario <= sturges_upper[2]){
list <- append(list, sturges_upper[2])
next
}
else if (salario <= sturges_upper[3]){
list <- append(list, sturges_upper[3])
next
}
else if (salario <= sturges_upper[4]){
list <- append(list, sturges_upper[4])
next
}
else if (salario <= sturges_upper[5]){
list <- append(list, sturges_upper[5])
next
}
else if (salario <= sturges_upper[6]){
list <- append(list, sturges_upper[6])
next
}
}
dados$Salario_disc <- list
for (salario in unique(dados$Salario)){
if (salario <= sturges_upper[1]){
list <- append(list, sturges_upper[1])
}
else if (salario <= sturges_upper[2]){
list <- append(list, sturges_upper[2])
}
else if (salario <= sturges_upper[3]){
list <- append(list, sturges_upper[3])
}
else if (salario <= sturges_upper[4]){
list <- append(list, sturges_upper[4])
}
else if (salario <= sturges_upper[5]){
list <- append(list, sturges_upper[5])
}
else if (salario <= sturges_upper[6]){
list <- append(list, sturges_upper[6])
}
}
dados$Salario_disc <- list
list <- []
list <- c()
for (salario in unique(dados$Salario)){
if (salario <= sturges_upper[1]){
list <- append(list, sturges_upper[1])
}
else if (salario <= sturges_upper[2]){
list <- append(list, sturges_upper[2])
}
else if (salario <= sturges_upper[3]){
list <- append(list, sturges_upper[3])
}
else if (salario <= sturges_upper[4]){
list <- append(list, sturges_upper[4])
}
else if (salario <= sturges_upper[5]){
list <- append(list, sturges_upper[5])
}
else if (salario <= sturges_upper[6]){
list <- append(list, sturges_upper[6])
}
}
dados$Salario_disc <- list
list
list <- c()
for (salario in dados$Salario){
if (salario <= sturges_upper[1]){
list <- append(list, sturges_upper[1])
}
else if (salario <= sturges_upper[2]){
list <- append(list, sturges_upper[2])
}
else if (salario <= sturges_upper[3]){
list <- append(list, sturges_upper[3])
}
else if (salario <= sturges_upper[4]){
list <- append(list, sturges_upper[4])
}
else if (salario <= sturges_upper[5]){
list <- append(list, sturges_upper[5])
}
else if (salario <= sturges_upper[6]){
list <- append(list, sturges_upper[6])
}
}
dados$Salario_disc <- list
dados <- read.csv("banco de dados 2.csv")
dados <- read.csv("banco de dados 2.csv", sep = ';')
dados <- read.csv("banco de dados 3.csv", sep = ';')
dados <- read.csv("banco de dados 3.csv", sep = ';', dec = ',')
dados <- read.csv("banco de dados 2.csv", sep = ';', dec = ',')
levieneTest(Nota_Biol ~ Posicao_Sala)
levieneTest(dados$Nota_Biol ~ dados$Posicao_Sala)
leveneTest(dados$Nota_Biol ~ dados$Posicao_Sala)
leveneTest(dados$Nota_Biol ~ dados$Posicao_Sala, center = mean) #teste de homogeneidade
View(dados)
leveneTest(dados$Nota_Hist ~ dados$Posicao_Sala, center = mean) #teste de homogeneidade com centro em relação à média
