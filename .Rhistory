data('USArrests')
dados <- USArrests
p.cov <- var(scale(dados))
p.cov <- var(dados)
p.mean <- apply(dados, 2, mean)
View(dados)
p.mah <- mahalanobis(dados, p.mean, p.cov)
dados.p <- scale(dados)
d.eucl <- dist(dados.p, method = 'euclidean')
#Conferindo as distâncias euclideanas
round(as.matrix(d.eucl)[1:4,1:5],1)
#Conferindo as distâncias euclideanas
round(as.matrix(d.eucl)[1:5,1:5],1)
res.hc <- hclust(d = d.eucl, method = 'ward.D2')
#Matriz cofonética
res.coph <- cophonetic(res.hc)
res.hc <- hclust(d = d.eucl, method = 'ward.D2')
#Matriz cofonética
res.coph <- cophenetic(res.hc)
#Correlação entre a distância cofonética e a distância original
cor(d.eucl, res.coph)
#comparando o método de ligação média - distância média
hc.m <- hclust(d.eucl, method = 'average')
#Correlação entre a distância cofonética (com base no método da ligação média) e a distância original
cor(d.eucl, cophenetic(hc.m))
fviz_dend(hc.m, cex = 0.5)
if(!require(factoextra)) install.packages("factoextra")
if(!require(readxl)) install.packages("readxl")
if(!require(dplyr)) install.packages("dplyr")
if(!require(car)) install.packages("car")
if(!require(psych)) install.packages("psych")
if(!require(RVAideMemoire)) install.packages("RVAideMemoire")
if(!require(pacman)) install.packages("pacman")
library(factoextra)
library(readxl)
library(dplyr)
library(car)
library(psych)
library(RVAideMemoire)
library(pacman)
pacman :: p_load(dplyr, ggplot2, car, rstatix, lmtest, ggpubr, ggpmisc, psych, MASS, DescTools, QuantPsyc)
fviz_dend(hc.m, cex = 0.5)
summary(dados)
p.cov <- var(scale(dados))
p.cov <- (scale(dados))
var
p.cov <- var(scale(dados))
hdata<-hclust(d.eucl)
abline(h=3.75, lty=2)
dendograma<-hclust(d.eucl)
plot(dendograma)
abline(h=3.75, lty=2)
dendograma<-hclust(d.eucl)
fviz_dend(hc.m, cex = 0.5)
abline(h=1.5, lty=2)
plot(dendograma)
fviz_dend(hc.m, cex = 0.5)
dendograma<-hclust(d.eucl, cex = 0.5)
k_means<-kmeans(dados, centers = 9, nstart = 50)
#Simple visualisation of clusters
plot(x=dados[,1], y=dados[,2], col=k_means$cluster)
points(k_means$centers, pch=3, cex=2)
fviz_dend(hc.m, cex = 0.5)
fviz_dend(hc.m, cex = 0.5, k = 3)
fviz_dend(hc.m, cex = 0.5, k = 2)
fviz_dend(hc.m, cex = 0.5, k = 9)
fviz_dend(hc.m, cex = 0.5, k = 5)
k_means<-kmeans(dados, centers = 5, nstart = 50)
k_means<-kmeans(dados, centers = 5, nstart = 50)
plot(x=dados[,1], y=dados[,2], col=k_means$cluster)
points(k_means$centers, pch=3, cex=2)
fviz_dend(hc.m, cex = 0.5, k = 5, color_labels_by_k = TRUE)
fviz_dend(hc.m, cex = 0.5, k = 5, color_labels_by_k = FALSE)
fviz_dend(hc.m, cex = 0.5, k = 5, color_labels_by_k = TRUE, rect = TRUE)
k_means<-kmeans(dados, centers = 5, nstart = 50)
plot(x=dados[,1], y=dados[,2], col=k_means$cluster)
points(k_means$centers, pch=3, cex=2)
plot(x=dados[,1], y=dados[,2], col=k_means$cluster)
points(k_means$centers, pch=3, cex=2)
k_means<-kmeans(dados, centers = 5, nstart = 50)
#Simple visualisation of clusters
plot(x=dados[,1], y=dados[,2], col=k_means$cluster)
points(k_means$centers, pch=3, cex=2)
k_means<-kmeans(dados, centers = 5, nstart = 50)
#Simple visualisation of clusters
plot(x=dados[,1], y=dados[,2], col=k_means$cluster)
points(k_means$centers, pch=3, cex=2)
k_means<-kmeans(dados, centers = 5, nstart = 50)
#Simple visualisation of clusters
plot(x=dados[,1], y=dados[,2], col=k_means$cluster)
points(k_means$centers, pch=3, cex=2)
k_means<-kmeans(dados, centers = 5, nstart = 50)
#Simple visualisation of clusters
plot(x=dados[,1], y=dados[,2], col=k_means$cluster)
points(k_means$centers, pch=3, cex=2)
k_means<-kmeans(dados, centers = 5, nstart = 50)
#Simple visualisation of clusters
plot(x=dados[,1], y=dados[,2], col=k_means$cluster)
points(k_means$centers, pch=3, cex=2)
#Correlação entre a distância cofonética e a distância original
cor(d.eucl, res.coph)
#Matriz cofonética
res.coph <- cophenetic(res.hc)
View(res.hc)
res.hc[["height"]]
#Correlação entre a distância cofonética e a distância original
cor(d.eucl, res.coph)
#comparando o método de ligação média - distância média
hc.m <- hclust(d.eucl, method = 'average')
View(hc.m)
View(hdata)
View(hdata)
View(dendograma)
if(!require(pacman)) install.packages("cluster")
library(factoextra)
library(cluster)
clusplot(sus_arrests, kus_arrests$cluster, color = T, labels = 2, main = 'Cluster Plot')
clusplot(dados, k_means$cluster, color = T, labels = 2, main = 'Cluster Plot')
groups <- 3
fviz_dend(hc.m, cex = 0.5, k = groups, color_labels_by_k = TRUE, rect = TRUE)
#qual a distância ideal?
#Por exemplo, nesse caso a distância 4 me entrega dois grupos onde um tem uma porrada de indivíduos, o outro tem excessões
#talvez essa não seja uma boa distância então
# A melhor distância é aquela que cria uma quantidade parcimoniosa de grupos com alta homogeneidade e heterogêneos entre si
#modelo não hierárquico (kmeans)
k_means<-kmeans(dados, centers = groups, nstart = 50)
k_means<-kmeans(dados, centers = groups, nstart = 50)
#Simple visualisation of clusters
plot(x=dados[,1], y=dados[,2], col=k_means$cluster)
points(k_means$centers, pch=3, cex=2)
clusplot(dados, k_means$cluster, color = T, labels = 2, main = 'Cluster Plot')
#Simple visualisation of clusters
plot(x=dados[,1], y=dados[,2], col=k_means$cluster)
points(k_means$centers, pch=3, cex=2)
clusplot(dados, k_means$cluster, color = T, labels = 2, main = 'Cluster Plot')
points(k_means$centers, pch=3, cex=2)
plot(x=dados[,1], y=dados[,2], col=k_means$cluster)
points(k_means$centers, pch=3, cex=2)
points(k_means$centers, pch=3, cex=1)
points(k_means$centers, pch=3, cex=1)
plot(x=dados[,1], y=dados[,2], col=k_means$cluster)
points(k_means$centers, pch=3, cex=1)
p.cov <- var(scale(dados))
dados.p <- scale(dados)
p.cov <- var(scale(dados))
p.mean <- apply(dados, 2, mean)
p.mah <- mahalanobis(dados, p.mean, p.cov)
p.cov <- var(scale(dados))
p.mah <- mahalanobis(dados, p.mean, p.cov)
dados.p <- scale(dados)
d.eucl <- dist(dados.p, method = 'euclidean')
#Conferindo as distâncias euclideanas
round(as.matrix(d.eucl)[1:5,1:5],1)
# Método hierárquico da variância mínima de ward ou distância média
res.hc <- hclust(d = d.eucl, method = 'ward.D2')
#Matriz cofonética
res.coph <- cophenetic(res.hc)
k_means<-kmeans(dados.p, centers = groups, nstart = 50)
#Simple visualisation of clusters
plot(x=dados.p[,1], y=dados.p[,2], col=k_means$cluster)
points(k_means$centers, pch=3, cex=1)
clusplot(dados.p, k_means$cluster, color = T, labels = 2, main = 'Cluster Plot')
fviz_dend(hc.m, cex = 0.5, k = groups, color_labels_by_k = TRUE, rect = TRUE)
d.eucl <- dist(dados.p, method = 'euclidean')
groups <- 4
fviz_dend(hc.m, cex = 0.5, k = groups, color_labels_by_k = TRUE, rect = TRUE)
k_means<-kmeans(dados.p, centers = groups, nstart = 50)
#Simple visualisation of clusters
plot(x=dados.p[,1], y=dados.p[,2], col=k_means$cluster)
points(k_means$centers, pch=3, cex=1)
clusplot(dados.p, k_means$cluster, color = T, labels = 2, main = 'Cluster Plot')
k_means<-kmeans(dados.p, centers = groups, nstart = 50)
#Simple visualisation of clusters
plot(x=dados.p[,1], y=dados.p[,2], col=k_means$cluster)
points(k_means$centers, pch=3, cex=1)
k_means<-kmeans(dados.p, centers = groups, nstart = 50)
#Simple visualisation of clusters
plot(x=dados.p[,2], y=dados.p[,3], col=k_means$cluster)
points(k_means$centers, pch=3, cex=1)
p.cov <- var(scale(dados))
plot(x=dados.p[,2], y=dados.p[,4], col=k_means$cluster)
points(k_means$centers, pch=3, cex=1)
k_means<-kmeans(dados.p, centers = groups, nstart = 50)
#Simple visualisation of clusters
plot(x=dados.p[,2], y=dados.p[,3], col=k_means$cluster)
points(k_means$centers, pch=3, cex=1)
p.cov <- var(scale(dados))
?var
View(p.mah)
?mahalanobis
# Avaliando os dados por meio da distância euclideana, eu poderia utilizar
# outras, na verdade
?dist
round(as.matrix(d.manh)[1:5,1:5],1)
d.manh <- dist(dados.p, method = 'manhattan')
round(as.matrix(d.manh)[1:5,1:5],1)
res.hc <- hclust(d = d.manh, method = 'ward.D2')
res.coph <- cophenetic(res.hc)
cor(d.manh, res.coph)
hc.m <- hclust(d.manh, method = 'average')
cor(d.manh, cophenetic(hc.m))
fviz_dend(hc.m, cex = 0.5, k = groups, color_labels_by_k = TRUE, rect = TRUE)
#Conferindo as distâncias euclideanas
round(as.matrix(d.eucl)[1:5,1:5],1)
# Método hierárquico da variância mínima de ward ou distância média
res.hc <- hclust(d = d.eucl, method = 'ward.D2')
#Matriz cofonética
res.coph <- cophenetic(res.hc)
#Correlação entre a distância cofonética e a distância original
cor(d.eucl, res.coph)
#comparando o método de ligação média - distância média
hc.m <- hclust(d.eucl, method = 'average')
#Correlação entre a distância cofenética (com base no método da ligação média) e a distância original
cor(d.eucl, cophenetic(hc.m))
#DENDOGRAMA
groups <- 4
fviz_dend(hc.m, cex = 0.5, k = groups, color_labels_by_k = TRUE, rect = TRUE)
# Método hierárquico da variância mínima de ward ou distância média
res.hc <- hclust(d = d.eucl, method = 'ward.D2')
#Matriz cofonética
res.coph <- cophenetic(res.hc)
#Correlação entre a distância cofonética e a distância original
cor(d.eucl, res.coph)
#comparando o método de ligação média - distância média
hc.m <- hclust(d.eucl, method = 'average')
#Correlação entre a distância cofenética (com base no método da ligação média) e a distância original
cor(d.eucl, cophenetic(hc.m))
#DENDOGRAMA
groups <- 4
dendograma_eucl <- fviz_dend(hc.m, cex = 0.5, k = groups, color_labels_by_k = TRUE, rect = TRUE)
# Mesma coisa para distância de Manhattan
round(as.matrix(d.manh)[1:5,1:5],1)
res.hc <- hclust(d = d.manh, method = 'ward.D2')
res.coph <- cophenetic(res.hc)
cor(d.manh, res.coph)
hc.m <- hclust(d.manh, method = 'average')
cor(d.manh, cophenetic(hc.m))
dendograma_manh <- fviz_dend(hc.m, cex = 0.5, k = groups, color_labels_by_k = TRUE, rect = TRUE)
View(dendograma_manh)
View(dendograma_eucl)
fviz_dend(hc.m, cex = 0.5, k = groups, color_labels_by_k = TRUE, rect = TRUE)
#Conferindo as distâncias euclideanas
round(as.matrix(d.eucl)[1:5,1:5],1)
# Método hierárquico da variância mínima de ward ou distância média
res.hc <- hclust(d = d.eucl, method = 'ward.D2')
#Matriz cofonética
res.coph <- cophenetic(res.hc)
#Correlação entre a distância cofonética e a distância original
cor(d.eucl, res.coph)
#comparando o método de ligação média - distância média
hc.m <- hclust(d.eucl, method = 'average')
#Correlação entre a distância cofenética (com base no método da ligação média) e a distância original
cor(d.eucl, cophenetic(hc.m))
#DENDOGRAMA
groups <- 4
fviz_dend(hc.m, cex = 0.5, k = groups, color_labels_by_k = TRUE, rect = TRUE)
#Conferindo as distâncias euclideanas
round(as.matrix(d.eucl)[1:5,1:5],1)
# Método hierárquico da variância mínima de ward ou distância média
res.hc <- hclust(d = d.eucl, method = 'ward.D2')
#Matriz cofonética
res.coph <- cophenetic(res.hc)
#Correlação entre a distância cofonética e a distância original
cor(d.eucl, res.coph)
#comparando o método de ligação média - distância média
hc.m <- hclust(d.eucl, method = 'average')
#Correlação entre a distância cofenética (com base no método da ligação média) e a distância original
cor(d.eucl, cophenetic(hc.m))
#DENDOGRAMA
groups <- 4
fviz_dend(hc.m, cex = 0.5, k = groups, color_labels_by_k = TRUE, rect = TRUE)
k_means<-kmeans(dados.p, centers = groups)
plot(x=dados.p[,1], y=dados.p[,3], col=k_means$cluster)
points(k_means$centers, pch=3, cex=1)
k_means<-kmeans(dados.p, centers = groups)
#Simple visualisation of clusters
plot(x=dados.p[,2], y=dados.p[,4], col=k_means$cluster)
points(k_means$centers, pch=3, cex=1)
k_means<-kmeans(dados.p, centers = groups)
clusplot(dados.p, k_means$cluster, color = T, labels = 2, main = 'Cluster Plot')
clusplot(dados.p, k_means$cluster, color = T, labels = 1, main = 'Cluster Plot')
k_means<-kmeans(dados.p, centers = groups)
clusplot(dados.p, k_means$cluster, color = T, labels = 1, main = 'Cluster Plot')
clusplot(dados.p, k_means$cluster, color = T, labels = 3, main = 'Cluster Plot')
clusplot(dados.p, k_means$cluster, color = T, labels = 4, main = 'Cluster Plot')
k_means<-kmeans(dados.p, centers = groups)
clusplot(dados.p, k_means$cluster, color = T, labels = 4, main = 'Cluster Plot')
k_means<-kmeans(dados.p, centers = groups)
clusplot(dados.p, k_means$cluster, color = T, labels = 2, main = 'Cluster Plot')
clusplot(dados.p, k_means$cluster, color = T, labels = 2, main = 'Cluster Plot')
k_means<-kmeans(dados.p, centers = groups)
clusplot(dados.p, k_means$cluster, color = T, labels = 1, main = 'Cluster Plot')
#Simple visualisation of clusters
plot(x=dados.p[,2], y=dados.p[,4], col=k_means$cluster)
points(k_means$centers, pch=3, cex=1)
k_means<-kmeans(dados.p, centers = groups)
#Simple visualisation of clusters
plot(x=dados.p[,2], y=dados.p[,4], col=k_means$cluster)
points(k_means$centers, pch=3, cex=1)
k_means<-kmeans(dados.p, centers = groups)
#Simple visualisation of clusters
plot(x=dados.p[,2], y=dados.p[,4], col=k_means$cluster)
points(k_means$centers, pch=3, cex=1)
k_means<-kmeans(dados.p, centers = groups)
#Simple visualisation of clusters
plot(x=dados.p[,2], y=dados.p[,4], col=k_means$cluster)
points(k_means$centers, pch=3, cex=1)
clusplot(dados.p, k_means$cluster, color = T, labels = 1, main = 'Cluster Plot')
k_means<-kmeans(dados.p, centers = groups)
plot(x=dados.p[,2], y=dados.p[,4], col=k_means$cluster)
points(k_means$centers, pch=3, cex=1)
?hclust
k_means<-kmeans(dados.p, centers = groups, nstart = 1)
clusplot(dados.p, k_means$cluster, color = T, labels = 1, main = 'Clusters')
k_means<-kmeans(dados.p, centers = groups, nstart = 1)
plot(x=dados.p[,2], y=dados.p[,4], col=k_means$cluster)
points(k_means$centers, pch=3, cex=1)
#Simple visualisation of clusters
plot(x=dados.p[,1], y=dados.p[,4], col=k_means$cluster)
#Simple visualisation of clusters
plot(x=dados.p[,1], y=dados.p[,3], col=k_means$cluster)
#Simple visualisation of clusters
plot(x=dados.p[,1], y=dados.p[,2], col=k_means$cluster)
View(dados)
#Simple visualisation of clusters
plot(x=dados.p[,2], y=dados.p[,1], col=k_means$cluster)
#Simple visualisation of clusters
plot(x=dados.p[,2], y=dados.p[,3], col=k_means$cluster)
#Simple visualisation of clusters
plot(x=dados.p[,2], y=dados.p[,4], col=k_means$cluster)
#Simple visualisation of clusters
plot(x=dados.p[,3], y=dados.p[,1], col=k_means$cluster)
#Simple visualisation of clusters
plot(x=dados.p[,3], y=dados.p[,2], col=k_means$cluster)
#Simple visualisation of clusters
plot(x=dados.p[,3], y=dados.p[,3], col=k_means$cluster)
#Simple visualisation of clusters
plot(x=dados.p[,3], y=dados.p[,4], col=k_means$cluster)
#Simple visualisation of clusters
plot(x=dados.p[,4], y=dados.p[,1], col=k_means$cluster)
#Simple visualisation of clusters
plot(x=dados.p[,4], y=dados.p[,2], col=k_means$cluster)
#Simple visualisation of clusters
plot(x=dados.p[,4], y=dados.p[,3], col=k_means$cluster)
#Simple visualisation of clusters
plot(x=dados.p[,3], y=dados.p[,4], col=k_means$cluster)
#Simple visualisation of clusters
plot(x=dados.p[,4], y=dados.p[,3], col=k_means$cluster)
clusplot(dados.p, k_means$cluster, color = T, labels = 1, main = 'Grupos')
clusplot(dados.p, k_means$cluster, color = T, labels = 2, main = 'Grupos')
setwd("C:/Users/Isabel Giannecchini/Desktop/SSD/rCrashCourse")
dados <- read.csv("dados\dados_anacorr.csv")
# Análise de Correspondência
# Montar e pesquisar
# Imports
if(!require(FactoMineR)) install.packages("FactoMineR")
if(!require(factoextra)) install.packages("factoextra")
if(!require(tidyverse)) install.packages("tidyverse")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(readr)) install.packages("readr")
library(FactoMineR)
library(factoextra)
library(tidyverse)
library(ggplot2)
library(readr)
#Dados
dados <- read.csv("dados/dados_anacorr.csv")
head(dados)
table(dados)
dados <- read.csv("dados/dados_anacorr.csv")
head(dados)
View(dados)
dados.columnnames()
dados.columns()
dados.colnames()
dados <- dados[,c("SEX", "ACTIVITY.LEVEL", "MBTI", "POSTURE")]
table(dados)
res.ca <- CA(table(dados))
res.ca <- CA(table(dados$SEX, dados$MBTI))
grafico <- plot(res.ca)
res.ca <- CA(table(dados$SEX, dados$MBTI))
grafico <- plot(res.ca)
res.ca <- CA(table(dados$SEX, dados$MBTI))
res.ca <- CA(ca)
ca <- table(dados$SEX, dados$MBTI)
res.ca <- CA(ca)
View(res.ca)
ca
ca <- table(dados$POSTURE, dados$MBTI)
res.ca <- CA(ca)
ca <- table(dados$SEX, dados$MBTI)
res.ca <- CA(ca)
ca <- table(dados$POSTURE, dados$MBTI)
res.ca <- CA(ca)
grafico <- plot(res.ca)
res_mca <- MCA(dados)
fviz_screeplot(res_mca, addlabels = TRUE)
fviz_mca_var(res_mca, choice = 'mca.cor', repel = TRUE, ggtheme = theme_minimal()) + labs(title =  "MCA - Variáveis")
fviz_mca_var(res_mca, col.var = 'black', shape.var = 1, repel = TRUE)
fviz_cos2(res_mca, choice='var', axes= 1:2)
fviz_cos2(res_mca, choice='var', axes= 1:2) + labs(x =  "", y= "", title="")
fviz_mca_var(res_mca, col.var = 'black', shape.var = 1, repel = TRUE)
fviz_cos2(res_mca, choice='var', axes= 1:2) + labs(x =  "", y= "", title="")
ca <- table(dados$POSTURE, dados$MBTI)
res.ca <- CA(ca)
fviz_contrib(res_mca, choice='var', axes=1:2)
fviz_contrib(res_mca, choice='var', axes=1:2) + labs(x =  "", y= "Contribuições (%)", title="")
fviz_mca_biplot(res_mca,
geom.ind = 'poink',
habillage = 3,
addEllipses = TRUE,
col.var = "black",
palette = c('green', 'blue'),
title = '',
legend.title = '',
mean.point = FALSE,
repel = TRUE)
fviz_mca_biplot(res_mca,
geom.ind = 'poink',
habillage = 3,
addEllipses = TRUE,
col.var = "black",
title = '',
legend.title = '',
mean.point = FALSE,
repel = TRUE)
fviz_mca_biplot(res_mca,
geom.ind = 'poink',
habillage = 3,
addEllipses = TRUE,
col.var = "black",
title = '',
legend.title = 'Personalidades',
mean.point = FALSE,
repel = TRUE)
fviz_mca_biplot(res_mca,
geom.ind = 'point',
habillage = 3,
addEllipses = TRUE,
col.var = "black",
title = '',
legend.title = 'Personalidades',
mean.point = FALSE,
repel = TRUE)
?fviz_contrib
fviz_contrib(res_mca, choice='var', axes=3:4) + labs(x =  "", y= "Contribuições (%)", title="")
fviz_mca_biplot(res_mca,
geom.ind = 'point',
habillage = 3,
addEllipses = TRUE,
col.var = "black",
title = '',
legend.title = 'Personalidades',
mean.point = FALSE,
repel = TRUE)
fviz_contrib(res_mca, choice='var', axes=3:4) + labs(x =  "", y= "Contribuições (%)", title="")
b
fviz_cos2(res_mca, choice='var', axes= 3:4) + labs(x =  "", y= "", title="")
fviz_contrib(res_mca, choice='var', axes=3:4) + labs(x =  "", y= "Contribuições (%)", title="")
fviz_contrib(res_mca, choice='var', axes=1:2) + labs(x =  "", y= "Contribuições (%)", title="")
3:4
fviz_contrib(res_mca, choice='var', axes=3:4) + labs(x =  "", y= "Contribuições (%)", title="")
fviz_mca_biplot(res_mca,
geom.ind = 'point',
habillage = 3,
addEllipses = TRUE,
col.var = "black",
title = '',
legend.title = 'Personalidades',
mean.point = FALSE,
repel = TRUE)
fviz_mca_biplot(res_mca$SEX,
geom.ind = 'point',
habillage = 3,
addEllipses = TRUE,
col.var = "black",
title = '',
legend.title = 'Personalidades',
mean.point = FALSE,
repel = TRUE)
fviz_mca_biplot(res_mca,
geom.ind = 'point',
habillage = 3,
addEllipses = TRUE,
col.var = "black",
title = '',
legend.title = 'Personalidades',
mean.point = FALSE,
repel = TRUE)
res_mca <- MCA(dados$SEX)
res_mca <- MCA(dados$SEX, dados$MBTI)
res_mca <- MCA(dados)
fviz_mca_var(res_mca, choice = 'mca.cor', repel = TRUE, ggtheme = theme_minimal()) + labs(title =  "MCA - Variáveis")
fviz_screeplot(res_mca, addlabels = TRUE)
res_mca <- MCA(dados, graph = FALSE) #mesmo gráfico plotado por fviz_mca_var
fviz_screeplot(res_mca, addlabels = TRUE)
fviz_mca_var(res_mca, choice = 'mca.cor', repel = TRUE, ggtheme = theme_minimal()) + labs(title =  "MCA - Variáveis")
fviz_mca_var(res_mca, col.var = 'black', shape.var = 1, repel = TRUE)
?fviz_mca_var
fviz_mca_var(res_mca, choice = 'mca.cor', repel = TRUE, ggtheme = theme_minimal()) + labs(title =  "MCA - Variáveis")
fviz_cos2(res_mca, choice='var', axes= 3:4) + labs(x =  "", y= "", title="")
?fviz_mca_biplot
?fviz_mca_biplot
fviz_mca_biplot(res_mca,
geom.ind = 'point',
habillage = 3,
addEllipses = TRUE,
col.var = "black",
title = '',
legend.title = 'Personalidades',
mean.point = FALSE,
repel = TRUE)
